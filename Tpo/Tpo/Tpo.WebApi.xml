<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tpo</name>
    </assembly>
    <members>
        <member name="T:Tpo.Databases.EntityConfigurations.BaseEntityTypeConfiguration`2">
            <summary>
            Configuración base para entidades.
            </summary>
            <typeparam name="TEntity">Tipo de la entidad.</typeparam>
            <typeparam name="TKey">Tipo de la clave primaria de la entidad.</typeparam>
        </member>
        <member name="T:Tpo.Databases.Repositorys.IRepositoryIncludableQueryable`2">
            <summary>
            Interfaz que define las operaciones del repositorio con consultas que incluyen propiedades relacionadas.
            </summary>
            <typeparam name="TEntity">Tipo de la entidad.</typeparam>
            <typeparam name="TKey">Tipo de la clave primaria de la entidad.</typeparam>
        </member>
        <member name="M:Tpo.Databases.Repositorys.IRepositoryIncludableQueryable`2.GetByIdOrDefault(`1,System.Boolean,System.Threading.CancellationToken,System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}}[])">
            <summary>
            Obtiene una entidad por su clave primaria o devuelve null si no se encuentra, incluyendo propiedades especificadas.
            </summary>
            <param name="id">Clave primaria de la entidad.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <param name="withTracking">Indica si se debe realizar seguimiento de cambios.</param>
            <param name="includes">Propiedades a incluir.</param>
        </member>
        <member name="M:Tpo.Databases.Repositorys.IRepositoryIncludableQueryable`2.GetById(`1,System.Boolean,System.Threading.CancellationToken,System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}}[])">
            <summary>
            Obtiene una entidad por su clave primaria, incluyendo propiedades especificadas.
            </summary>
            <param name="id">Clave primaria de la entidad.</param>
            <param name="cancellationToken">Token de cancelación.</param>
            <param name="withTracking">Indica si se debe realizar seguimiento de cambios.</param>
            <param name="includes">Propiedades a incluir.</param>
        </member>
        <member name="M:Tpo.Extensions.Services.WebAppServiceConfiguration.AddBoundaryServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
                Registers all services in the assembly of the given interface.
            </summary>
        </member>
        <member name="T:Tpo.Resources.Instrumentation">
            <summary>
            It is recommended to use a custom type to hold references for
            ActivitySource and Instruments. This avoids possible type collisions
            with other components in the DI container.
            </summary>
        </member>
        <member name="T:Tpo.Services.Jwt.IJwtUtils">
            <summary>
            Interfaz para utilidades relacionadas con JWT, como generación, validación y carga de tokens.
            </summary>
        </member>
        <member name="M:Tpo.Services.Jwt.IJwtUtils.GenerateJwtToken(Tpo.Domain.Usuario.Usuario)">
            <summary>
            Genera un token JWT a partir de un usuario.
            </summary>
            <param name="user">Usuario para el cual se genera el token.</param>
            <returns>Token JWT como cadena.</returns>
        </member>
        <member name="M:Tpo.Services.Jwt.IJwtUtils.ValidateJwtTokenAsync(System.String)">
            <summary>
            Valida un token JWT y retorna el nombre de usuario si es válido.
            </summary>
            <param name="token">Token JWT a validar.</param>
            <returns>Nombre de usuario si es válido, o null si no lo es.</returns>
        </member>
        <member name="M:Tpo.Services.Jwt.IJwtUtils.ValidationJwtTokenAsync(System.String)">
            <summary>
            Valida un token JWT y retorna true si es válido.
            </summary>
            <param name="token">Token JWT a validar.</param>
            <returns>True si el token es válido, false en caso contrario.</returns>
        </member>
        <member name="M:Tpo.Services.Jwt.IJwtUtils.DecodeToken(System.String)">
            <summary>
            Decodifica y valida un token JWT, devolviendo el resultado de la validación.
            </summary>
            <param name="token">Token JWT a decodificar.</param>
            <returns>Resultado de la validación del token.</returns>
        </member>
        <member name="M:Tpo.Services.Jwt.IJwtUtils.LoadToken(System.String,Tpo.Domain.Usuario.Usuario)">
            <summary>
            Carga los datos del token JWT en la instancia de usuario proporcionada.
            </summary>
            <param name="token">Token JWT a cargar.</param>
            <param name="user">Instancia de usuario donde se cargarán los datos.</param>
        </member>
        <member name="T:Tpo.Services.Jwt.JwtUtils">
            <summary>
            Implementación de <see cref="T:Tpo.Services.Jwt.IJwtUtils"/> para la gestión de tokens JWT.
            Permite generar, validar y cargar información de usuarios desde tokens JWT.
            </summary>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.#ctor(Tpo.Domain.Usuario.Services.IUsuarioRepository)">
            <summary>
            Implementación de <see cref="T:Tpo.Services.Jwt.IJwtUtils"/> para la gestión de tokens JWT.
            Permite generar, validar y cargar información de usuarios desde tokens JWT.
            </summary>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.GenerateJwtToken(Tpo.Domain.Usuario.Usuario)">
            <inheritdoc/>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.ValidateJwtTokenAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.ValidationJwtTokenAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.LoadToken(System.String,Tpo.Domain.Usuario.Usuario)">
            <inheritdoc/>
        </member>
        <member name="M:Tpo.Services.Jwt.JwtUtils.DecodeToken(System.String)">
            <inheritdoc/>
        </member>
    </members>
</doc>
